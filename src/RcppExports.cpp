// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// oneimpute
std::vector<double> oneimpute(const int niter, const int burnin, const int n_single, arma::mat m, std::vector<double> lambda, std::vector<double> mu_sigma_vec, std::vector<double> startval, int n, double epsilon1, double epsilon2, int ii);
RcppExport SEXP _HiCImpute_oneimpute(SEXP niterSEXP, SEXP burninSEXP, SEXP n_singleSEXP, SEXP mSEXP, SEXP lambdaSEXP, SEXP mu_sigma_vecSEXP, SEXP startvalSEXP, SEXP nSEXP, SEXP epsilon1SEXP, SEXP epsilon2SEXP, SEXP iiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type n_single(n_singleSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type mu_sigma_vec(mu_sigma_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type startval(startvalSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon1(epsilon1SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon2(epsilon2SEXP);
    Rcpp::traits::input_parameter< int >::type ii(iiSEXP);
    rcpp_result_gen = Rcpp::wrap(oneimpute(niter, burnin, n_single, m, lambda, mu_sigma_vec, startval, n, epsilon1, epsilon2, ii));
    return rcpp_result_gen;
END_RCPP
}
